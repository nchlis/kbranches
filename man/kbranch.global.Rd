% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kbranch.R
\name{kbranch.global}
\alias{kbranch.global}
\title{Clustering on K branches}
\usage{
kbranch.global(input_dat, Kappa, Dmat = NULL, init_Kmeans = TRUE,
  c0 = NULL, Vmat = NULL, nstart = 20, nstart_GAP = 20,
  nstart_kmeans = 20, B_GAP = NULL, fixed_center = NULL,
  medoids = FALSE, silent = TRUE, silent_internal = TRUE,
  show_plots = FALSE, show_lines = TRUE, show_plots_GAP = FALSE)
}
\arguments{
\item{input_dat:}{data frame of input data with rows=samles and cols=dimensions.}

\item{Kappa:}{number of clusters (halflines)}

\item{Dmat:}{matrix containing sample distances}

\item{init_Kmeans:}{if TRUE: initialize directions v1,...,vk using K-Means. FALSE: use directions of randomly selected samples}

\item{c0:}{initial value for the center of all half-lines}

\item{Vmat:}{matrix whose K rows are the direction vectors}

\item{nstart_GAP:}{number of initializations for clustering when calculating the GAP statistic}

\item{nstart_kmeans:}{number of initializations for Kmeans (when using Kmeans to initialize khalflines)}

\item{B_GAP:}{number of bootstrap datasets used to compute the GAP statistic, if NULL (default), it won't be computed}

\item{fixed_center:}{if not NULL, then K-halflines will run with the given center fixed}

\item{medoids:}{if TRUE, the medoids version of khalflines will be used (slower)}

\item{silent:}{set to FALSE to display messages (for debugging)}

\item{silent_internal:}{set to TRUE to display messages and plots of internal clustering functions (for debugging)}

\item{show_plots:}{if TRUE, the clustering will result be plotted}

\item{show_lines:}{if TRUE, show the halflines in the plot}

\item{show_plots_GAP:}{if TRUE, show the plots when performing clustering under the null distribution to calculate the GAP statistic (for debugging)}
}
\value{
a list with elements:
\itemize{
 \item - cluster: cluster assignment for each sample (numeric)
 \item - Kappa: number of clusters (halflines)
 \item - err: total clustering cost
 \item - iters: total iterations of the algorithm
 \item - c0: position (row index in input_dat) of the center sample
 \item - Vmat: positions (row indices in input_dat) of the direction samples
 \item - clust_counts: number (count) of samples in each of the clusters
 \item - all_clustering_errors: vector of total clustering error for each of the nstart different initializations
 \item - all_clusterings: total results for each of the nstart different initializations
 \item - GAP: value of the modified GAP statistic for the given Kappa
 \item - GAPl: value of the modified GAP statistic for the given Kappa using the logarithm of the expected dispersion
 \item - GAP_orig: value of the oroginal GAP statistic for the given Kappa (using the logarithm of the expected dispersion)
 \item - GAP_orig_no_log: value of the oroginal GAP statistic for the given Kappa (without using the logarithm of the expected dispersion)
 \item - GAP.sd: standard deviation of GAP
 \item - GAPl.sd: standard deviation of GAPl
 \item - GAP_orig.sd: standard deviation of GAP_orig
 \item - GAP_orig_no_log.sd: standard deviation of GAP_orig_no_log
 \item - call: function call
}
}
\description{
Clusters data on K-Halflines with a common center
and calculates the corresponding GAP statistic (optional)
}
\examples{
 #cluster the 2D data on three haflines
 set.seed(1)

 #load the data
 raw_dat=scdata.3lines.simulated6genes_subsampled

 #perform diffusion map dimensionality reduction
 dmap=destiny::DiffusionMap(raw_dat,sigma = 1000)

 #keep the first 2 diffusion components
 input_dat=destiny::as.data.frame(dmap)[,1:2]

 #cluster into a K-Star with K=3
 clust=kbranch.global(input_dat,Kappa=3)

 #plot the clustering results
 plot(input_dat,pch=21,col=clust$cluster,bg=clust$cluster,main='K-Branch clustering')


}

